// Code generated by entc, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldGooglenum holds the string denoting the googlenum field in the database.
	FieldGooglenum = "googlenum"
	// FieldHobby holds the string denoting the hobby field in the database.
	FieldHobby = "hobby"
	// FieldLang holds the string denoting the lang field in the database.
	FieldLang = "lang"
	// FieldGithub holds the string denoting the github field in the database.
	FieldGithub = "github"
	// FieldGitlab holds the string denoting the gitlab field in the database.
	FieldGitlab = "gitlab"
	// EdgeWriter holds the string denoting the writer edge name in mutations.
	EdgeWriter = "writer"
	// Table holds the table name of the user in the database.
	Table = "users"
	// WriterTable is the table that holds the writer relation/edge.
	WriterTable = "books"
	// WriterInverseTable is the table name for the Book entity.
	// It exists in this package in order to avoid circular dependency with the "book" package.
	WriterInverseTable = "books"
	// WriterColumn is the table column denoting the writer relation/edge.
	WriterColumn = "user_writer"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldAge,
	FieldEmail,
	FieldGooglenum,
	FieldHobby,
	FieldLang,
	FieldGithub,
	FieldGitlab,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultAge holds the default value on creation for the "age" field.
	DefaultAge func() time.Time
	// DefaultEmail holds the default value on creation for the "email" field.
	DefaultEmail string
	// DefaultGooglenum holds the default value on creation for the "googlenum" field.
	DefaultGooglenum string
	// DefaultHobby holds the default value on creation for the "hobby" field.
	DefaultHobby string
	// DefaultLang holds the default value on creation for the "lang" field.
	DefaultLang string
	// DefaultGithub holds the default value on creation for the "github" field.
	DefaultGithub string
	// DefaultGitlab holds the default value on creation for the "gitlab" field.
	DefaultGitlab string
)
