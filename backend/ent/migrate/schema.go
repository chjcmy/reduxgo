// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BooksColumns holds the columns for the "books" table.
	BooksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Default: "unknown"},
		{Name: "create_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "subject", Type: field.TypeString, Size: 2147483647, Default: "unknown"},
		{Name: "unit_contents", Type: field.TypeInt, Nullable: true},
		{Name: "user_writer", Type: field.TypeInt, Nullable: true},
	}
	// BooksTable holds the schema information for the "books" table.
	BooksTable = &schema.Table{
		Name:       "books",
		Columns:    BooksColumns,
		PrimaryKey: []*schema.Column{BooksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "books_units_contents",
				Columns:    []*schema.Column{BooksColumns[5]},
				RefColumns: []*schema.Column{UnitsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "books_users_writer",
				Columns:    []*schema.Column{BooksColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UnitsColumns holds the columns for the "units" table.
	UnitsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "content", Type: field.TypeString, Default: "unknown"},
		{Name: "content_name", Type: field.TypeString, Default: "unknown"},
	}
	// UnitsTable holds the schema information for the "units" table.
	UnitsTable = &schema.Table{
		Name:       "units",
		Columns:    UnitsColumns,
		PrimaryKey: []*schema.Column{UnitsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "age", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "email", Type: field.TypeString, Default: "unknown"},
		{Name: "googlenum", Type: field.TypeString, Default: ""},
		{Name: "hobby", Type: field.TypeString, Default: "unknown"},
		{Name: "lang", Type: field.TypeString, Default: "unknown"},
		{Name: "github", Type: field.TypeString, Default: "unknown"},
		{Name: "gitlab", Type: field.TypeString, Default: "unknown"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BooksTable,
		UnitsTable,
		UsersTable,
	}
)

func init() {
	BooksTable.ForeignKeys[0].RefTable = UnitsTable
	BooksTable.ForeignKeys[1].RefTable = UsersTable
}
